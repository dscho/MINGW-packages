# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: David Macek <david.macek.0@gmail.com>
# Contributor: Mateusz Miku≈Ça <mati865@gmail.com>
# Contributor: Alethea Rose <alethea@alethearose.com>

_realname=nodejs
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=6.14.1
pkgrel=1
pkgdesc="Evented I/O for V8 javascript (mingw-w64)"
arch=('any')
url="https://nodejs.org/"
license=("MIT")
makedepends=("${MINGW_PACKAGE_PREFIX}-python2" 'make')
depends=("${MINGW_PACKAGE_PREFIX}-c-ares"
         "${MINGW_PACKAGE_PREFIX}-http-parser"
         "${MINGW_PACKAGE_PREFIX}-icu"
         "${MINGW_PACKAGE_PREFIX}-libuv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "winpty")
optdepends=("${MINGW_PACKAGE_PREFIX}-npm: nodejs package manager")
options=('!emptydirs' '!strip') # 'debug')

source=("https://nodejs.org/dist/v${pkgver}/node-v${pkgver}.tar.xz"
        '0001-Fix-python-invocation-to-python2.patch'
        '0002-Fix-system-icu-build.patch'
        '0003-Include-win32-headers.h-in-v8-atomicops.h.patch'
        '0004-Define-localtime_s-for-MinGW.patch'
        '0005-Remove-.lib-suffix-on-linked-libraries.patch'
        '0006-Define-_WIN32_WINNT-in-node.gyp.patch'
        '0007-Skip-sys-resource-and-unneeded-includes-in-node.cc.patch'
        '0008-Link-with-municode-and-extern-wmain-for-Unicode.patch'
        '0009-Remove-no_rand_screen-from-s_client-invocation.patch'
        '0010-Fix-incorrect-test-assumptions-for-MinGW.patch'
        '0011-detect-architecture.patch'
        '0012-Use-shell-wrapper-script-for-npm-on-MSYS2-MinGW-w64.patch'
        '0013-Revert-to-FHS-installation-paths-on-Windows-tests-no.patch'
	'0014-Fix-linking-of-cctest-in-mingw-w64.patch'
	'0015-cctest-allow-building-with-municode.patch'
	'0016-format-macros.h-do-not-rely-on-__STDC_FORMAT_MACROS.patch'
	'0017-Do-not-get-confused-by-the-presence-of-winpthread.patch'
	'0018-Add-missing-include-to-build-condition-variable.cc-s.patch'
	'0019-Do-not-let-nghttp2-pretend-that-ssize_t-is-int.patch'
	'0020-inspector-use-namespaced-icu-symbols.patch'
	'0021-Use-wide-character-Win32-API-functions-to-handle-wch.patch'
	'0022-Disable-MSVC_HACK.patch'
        'node')

prepare() {
  cd "${srcdir}/node-v${pkgver}"

  patch -Np1 -i "${srcdir}/0001-Fix-python-invocation-to-python2.patch"
  patch -Np1 -i "${srcdir}/0002-Fix-system-icu-build.patch"
  patch -Np1 -i "${srcdir}/0003-Include-win32-headers.h-in-v8-atomicops.h.patch"
  patch -Np1 -i "${srcdir}/0004-Define-localtime_s-for-MinGW.patch"
  patch -Np1 -i "${srcdir}/0005-Remove-.lib-suffix-on-linked-libraries.patch"
  patch -Np1 -i "${srcdir}/0006-Define-_WIN32_WINNT-in-node.gyp.patch"
  patch -Np1 -i "${srcdir}/0007-Skip-sys-resource-and-unneeded-includes-in-node.cc.patch"
  patch -Np1 -i "${srcdir}/0008-Link-with-municode-and-extern-wmain-for-Unicode.patch"
  patch -Np1 -i "${srcdir}/0009-Remove-no_rand_screen-from-s_client-invocation.patch"
  patch -Np1 -i "${srcdir}/0010-Fix-incorrect-test-assumptions-for-MinGW.patch"
  patch -Np1 -i "${srcdir}/0011-detect-architecture.patch"
  patch -Np1 -i "${srcdir}/0012-Use-shell-wrapper-script-for-npm-on-MSYS2-MinGW-w64.patch"
  patch -Np1 -i "${srcdir}/0013-Revert-to-FHS-installation-paths-on-Windows-tests-no.patch"
  patch -Np1 -i "${srcdir}/0014-Fix-linking-of-cctest-in-mingw-w64.patch"
  patch -Np1 -i "${srcdir}/0015-cctest-allow-building-with-municode.patch"
  patch -Np1 -i "${srcdir}/0016-format-macros.h-do-not-rely-on-__STDC_FORMAT_MACROS.patch"
  patch -Np1 -i "${srcdir}/0017-Do-not-get-confused-by-the-presence-of-winpthread.patch"
  patch -Np1 -i "${srcdir}/0018-Add-missing-include-to-build-condition-variable.cc-s.patch"
  patch -Np1 -i "${srcdir}/0019-Do-not-let-nghttp2-pretend-that-ssize_t-is-int.patch"
  patch -Np1 -i "${srcdir}/0020-inspector-use-namespaced-icu-symbols.patch"
  patch -Np1 -i "${srcdir}/0021-Use-wide-character-Win32-API-functions-to-handle-wch.patch"
  patch -Np1 -i "${srcdir}/0022-Disable-MSVC_HACK.patch"
}

build() {

  local -a extra_config

  cd "${srcdir}"
  sleep 5

  [[ -d ${CARCH} ]] && rm -rf ${CARCH}
  mv node-v${pkgver} ${CARCH}
  cd ${CARCH}

  if check_option "debug" "y"; then
    extra_config+=( --debug )
  fi

  local opt_cpu="x64"
  if [ "${CARCH}" = "i686" ]; then
    opt_cpu="x86"
  fi

  ./configure \
    --prefix="${MINGW_PREFIX}" \
    --dest-os=win \
    --dest-cpu=${opt_cpu} \
    --shared-openssl \
    --shared-zlib \
    --shared-cares \
    --with-intl=system-icu \
    --shared-http-parser \
    --without-perfctr \
    --without-etw \
    "${extra_config[@]}"

  ${MINGW_PREFIX}/bin/python2 tools/gyp_node.py -f make
  touch config.gypi
  # Work around the problem where the protocol files would be generated into a
  # subdirectory relative to deps/v8/src/inspector instead of relative to the
  # top-level directory.
  CXXFLAGS=-D_WIN32_WINNT=0x0600 make out/Release/obj/gen/src/inspector/protocol/Forward.h
  CXXFLAGS=-D_WIN32_WINNT=0x0600 make

  # flatten the nested node_modules/ hierarchy
  test -z "$(find deps/npm/node_modules | grep '^.\{140,\}$')" ||
  (cd deps/npm &&
   cp -R . ../npm.bup &&
   rm -rf node_modules &&
   ../../out/Release/node.exe ../npm.bup/bin/npm-cli.js install --production)
}

check() {
  cd "${srcdir}/${CARCH}"

  # A few tests still fail due to a bug with pausing/resuming file streams
  ${MINGW_PREFIX}/bin/python2 tools/test.py --mode=release -J \
    cctest doctool inspector message parallel sequential tick-processor || true
}

package() {
  cd "${srcdir}/${CARCH}"

  ${MINGW_PREFIX}/bin/python2 tools/install.py install "${pkgdir}" "/${MINGW_PREFIX}"

  install -d "${pkgdir}${MINGW_PREFIX}/share/doc/nodejs"
  cp -r doc/api/{*.html,assets} \
    "${pkgdir}${MINGW_PREFIX}/share/doc/nodejs"

  install -D -m644 LICENSE \
    "${pkgdir}${MINGW_PREFIX}/share/licenses/nodejs/LICENSE"

  mv -v "${pkgdir}$MINGW_PREFIX/bin/node"{.exe,_exe}
  install -m755 "${srcdir}/node" "${pkgdir}${MINGW_PREFIX}/bin/node"
  mv -v "${pkgdir}$MINGW_PREFIX/bin/node"{_exe,.exe}
}

sha256sums=('115eda89ff718abe811cb14c31dec891efa20b92c99e715f5e094641bc56bec3'
            '9e441c328e353fff31d68cf9cd6ec3df435d855bce569f7cbb5e7416f35abf12'
            'a2c02dc437ed61fcefb43a933aee5688a06216f7f361800a138ef5939271aaa3'
            '4c4630d0187ba46923978874a0c62b82ee5aab295140ed1c55120c96ee78ee8d'
            '1dbe82e1d339ec3676cd09ae2cda9ab008e883b9d244c4cc5a606e4f005f254c'
            '323499d4f2a2696b852dece082c3813c09d3b68297e5dcb204ed7dcee95e6a3a'
            '3433fb822b9035c08dffbd3257b46ea8ac94e2208659d64b89db641b834a5c18'
            '47d60824d60449e9ceb96bb1246d359f4aabd7c16489adcd986809221072aec0'
            'a0c1adfa8a8348e4c2e9802a83e29b6583a8bcc49b910061722866ec9d0770c7'
            '04475ac58e9c91896e39307e75e5916128785d50b2c2cbd8471298b1cecb12df'
            '3b067184e59330db0021634b515bcd6ae3688726e75c199728143e93cb775613'
            'e014351a1af8bf1914727f39eff68c51494f5b4cbe86fc49c0695f57f5b86880'
            '2e1de5d575794c280fe89b7798d6cbd3fe63bf44e3422bfb21db6737226ffff4'
            'c9ca0c275b7004121afcca81057781a3b3aaacbdd744b935783ecf65c5c400d1'
            '0e8254261c4bc525e735a0b74d4940b0f9a76b6e9dd559bb9cae8c4f95f71497'
            '5de50596f0bc2d6030a8513b9c1df5ee088d9b19afe3ed9f88a3fec63380d725'
            '6004d0da93fb0c1c2eb65e6d1c04b2f58731c49af5a44b2973ddd01ce7bc3916'
            '94f1b78422a85d328b5d4c51d7c9872bffea47e576a47772385efbdc5a5a47e6'
            '1fc84dfc20f5eb46731847831e65ff7d6451132851a17eb1d4897c8db36c46a9'
            '06bc128e7f25d622788c48a686966ab69d13db9af2a2edbe9f612244b4a78487'
            'e4f39631cfeeda8d4c3aaba9afade17073f134b3d019d16184ef75c1e62ee24e'
            '67de55113287d6530572081234e247e065826bcfb3d982c8d9323945cc6290f8'
            '8a18949f2d73ad0b688de11ae998b68eaf83491077bcdc5981c932ea8129e799'
            '284251ff443506cd61530a026afb421d0084e4ad25c037bcfe3a045246d729a2')
